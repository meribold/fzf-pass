#!/usr/bin/env bash

listPasswords() {
   find -L ~/.password-store -name '*.gpg' -printf '%P\n' | sed 's/.gpg$//' | sort
}

generateOtp() {
   declare -A stuff
   readPassFile
   pass otp "$selected_password"
}

readarray -t fzf_output < <(listPasswords 2>/dev/null | fzf --expect=alt-u,alt-p,alt-a,alt-o,alt-enter)

(( ${#fzf_output[@]} == 2 )) || exit $?

key=${fzf_output[0]}
selected_password=${fzf_output[1]}

[[ $selected_password ]] || exit $?

readPassFile() {
   readarray -t lines < <(pass show "$selected_password")
   password=${lines[0]}

   stuff[pass]=$password

   while read -r line; do
      unset _id _val
      case $line in
         'otpauth://'*)
            _id=OTP
            _val=
            ;;
         *)
            _id=${line%%: *}
            _val=${line#* }
            ;;
      esac

      if [[ -n $_id ]]; then
         stuff[${_id}]=$_val
      fi
   done < <(printf '%s\n' "${lines[@]:1}" | awk '$1 ~ /:$/ || /otpauth:\/\// {$1=$1;print}')

   if [[ -z ${stuff[autotype]} ]]; then
      stuff[autotype]='user :tab pass'
   fi
   if [[ -z ${stuff[user]} ]]; then
      stuff[user]=meribold
   fi
}

case $key in
   '')
      output=$(pass show "$selected_password")
      num_lines=$(wc -l <<< "$output")
      max_line_length=$(wc -L <<< "$output")
      i3-msg -q "resize set $((max_line_length > 36 ? 4 + max_line_length * 7 : 256)) $((num_lines > 4 ? 4 + num_lines * 13 : 56)); move position center"
      tput civis
      printf '%s' "$output"
      read -rn1
      exit
      ;;
   alt-o)
      $BROWSER "$(pass show "$selected_password" | grep 'url: ' | gawk '{sub(/:/,"")}{print $2}1' | head -1)"
      exit
      ;;
esac

x_repeat_enabled=$(xset q | awk '/auto repeat:/ {print $3}')

cleanup() {
   xset r "$x_repeat_enabled"
}
trap cleanup EXIT

xset r off

declare -A stuff
readPassFile

trap '' SIGHUP
case $key in
   alt-u)
      sleep 0.05
      xdotool type --clearmodifiers "${stuff[user]}"
      ;;
   alt-p)
      sleep 0.05
      xdotool type --clearmodifiers "$password"
      ;;
   alt-a)
      sleep 0.05
      for word in ${stuff[autotype]}; do
         case $word in
            :tab) xdotool key Tab;;
            :space) xdotool key space;;
            :delay) sleep 2;;
            :enter) xdotool key Return;;
            :otp) xdotool type --clearmodifiers "$(generateOtp)";;
            pass) xdotool type --clearmodifiers "$password";;
            *) printf '%s' "${stuff[${word}]}" | xdotool type --clearmodifiers --file -;;
         esac
      done
      ;;
esac &
